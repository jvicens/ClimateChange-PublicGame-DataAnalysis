##############################
### Average Contribution Norm
##############################
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
### Contributions per endowment and ages subgroup
data_users$contribution_norm_endowment_norm_endowment <- (data_users$contribution_norm_endowment_norm_endowment)/10
contribution_20 <- (data_users$contribution_norm_endowment[data_users$endowment==20])
describe(contribution_20)
contribution_30 <- (data_users$contribution_norm_endowment[data_users$endowment==30])
describe(contribution_30)
contribution_40_equal <- (data_users$contribution_norm_endowment[data_users$endowment==40 & data_users$unequal==0])
describe(contribution_40_equal)
contribution_40_unequal <- (data_users$contribution_norm_endowment[data_users$endowment==40 & data_users$unequal==1])
describe(contribution_40_unequal)
contribution_50 <- (data_users$contribution_norm_endowment[data_users$endowment==50 & data_users$minor==0])
describe(contribution_50)
contribution_60 <- (data_users$contribution_norm_endowment[data_users$endowment==60 & data_users$minor==0])
describe(contribution_60)
### Contributions by endowment
stats_contribution <- aggregate((data_users$contribution_norm_endowment),
by = list(endowment = data_users$endowment, unequal=data_users$unequal),
FUN = function(x) c(mean = mean(x), sd = sd(x),n = length(x)))
stats_contribution <- do.call(data.frame, stats_contribution)
stats_contribution$se <- stats_contribution$x.sd / sqrt(stats_contribution$x.n)
colnames(stats_contribution) <- c("endowment", "unequal", "mean", "sd", "n", "se")
stats_contribution$names <- c(paste(stats_contribution$endowment))
### Sort contributions
stats_contribution <- rbind(stats_contribution[2,], stats_contribution[3,],stats_contribution[4,],stats_contribution[1,],stats_contribution[5,],stats_contribution[6,])
### Plot contributions
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
pdf("img/contributions_norm.pdf")
barx <- barplot(stats_contribution$mean, names.arg=stats_contribution$names,ylim=c(0,1.1), col=c(color1, color1,color1,color2,color1,color1), border=NA, axis.lty=1, xlab="Endowment", ylab="Contribution")
error.bar(barx,stats_contribution$mean, 1.96*stats_contribution$sd/10)
points(barx, c(1,1,1,1,0.8,0.66), col=c(color1, color1,color1,color2,color1,color1), bg=c(color1, color1,color1,color2,color1,color1), pch = 21, cex=1.5)
abline(h = 0.5, col="black", lwd=1, lty=2)
legend("topright", legend = c("Unequal Treatment", "Equal Treatment"), fill = c(color1, color2))
dev.off()
data_users$contribution_norm_endowment_norm_endowment <- (data_users$contribution_norm_endowment_norm_endowment)/10
data_users$contribution_norm_endowment_norm_endowment <- (data_users$contribution_norm_endowment_norm_endowment)/10
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
data_users$contribution_norm_endowment_norm_endowment <- (data_users$contribution_norm_endowment_norm_endowment)/10
cat("\014")
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
data_users
source('~/Documents/OpenSystems/ClimateChange/Repository/Contributions/contribution_by_endowment.R', echo=TRUE)
##############################
### Average Contribution Norm
##############################
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
### Contributions per endowment and ages subgroup
data_users$contribution_norm <- (data_users$contribution_norm)/10
contribution_20 <- (data_users$contribution_norm[data_users$endowment==20])
describe(contribution_20)
contribution_30 <- (data_users$contribution_norm[data_users$endowment==30])
describe(contribution_30)
contribution_40_equal <- (data_users$contribution_norm[data_users$endowment==40 & data_users$unequal==0])
describe(contribution_40_equal)
contribution_40_unequal <- (data_users$contribution_norm[data_users$endowment==40 & data_users$unequal==1])
describe(contribution_40_unequal)
contribution_50 <- (data_users$contribution_norm[data_users$endowment==50 & data_users$minor==0])
describe(contribution_50)
contribution_60 <- (data_users$contribution_norm[data_users$endowment==60 & data_users$minor==0])
describe(contribution_60)
### Contributions by endowment
stats_contribution <- aggregate((data_users$contribution_norm),
by = list(endowment = data_users$endowment, unequal=data_users$unequal),
FUN = function(x) c(mean = mean(x), sd = sd(x),n = length(x)))
stats_contribution <- do.call(data.frame, stats_contribution)
stats_contribution$se <- stats_contribution$x.sd / sqrt(stats_contribution$x.n)
colnames(stats_contribution) <- c("endowment", "unequal", "mean", "sd", "n", "se")
stats_contribution$names <- c(paste(stats_contribution$endowment))
### Sort contributions
stats_contribution <- rbind(stats_contribution[2,], stats_contribution[3,],stats_contribution[4,],stats_contribution[1,],stats_contribution[5,],stats_contribution[6,])
### Plot contributions
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
pdf("img/contributions_norm.pdf")
barx <- barplot(stats_contribution$mean, names.arg=stats_contribution$names,ylim=c(0,1.1), col=c(color1, color1,color1,color2,color1,color1), border=NA, axis.lty=1, xlab="Endowment", ylab="Contribution")
error.bar(barx,stats_contribution$mean, 1.96*stats_contribution$sd/10)
points(barx, c(1,1,1,1,0.8,0.66), col=c(color1, color1,color1,color2,color1,color1), bg=c(color1, color1,color1,color2,color1,color1), pch = 21, cex=1.5)
abline(h = 0.5, col="black", lwd=1, lty=2)
legend("topright", legend = c("Unequal Treatment", "Equal Treatment"), fill = c(color1, color2))
dev.off()
##############################
### Average Contribution Norm
##############################
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
### Contributions per endowment and ages subgroup
data_users$contribution_norm <- (data_users$contribution_norm)
contribution_20 <- (data_users$contribution_norm[data_users$endowment==20])
describe(contribution_20)
contribution_30 <- (data_users$contribution_norm[data_users$endowment==30])
describe(contribution_30)
contribution_40_equal <- (data_users$contribution_norm[data_users$endowment==40 & data_users$unequal==0])
describe(contribution_40_equal)
contribution_40_unequal <- (data_users$contribution_norm[data_users$endowment==40 & data_users$unequal==1])
describe(contribution_40_unequal)
contribution_50 <- (data_users$contribution_norm[data_users$endowment==50 & data_users$minor==0])
describe(contribution_50)
contribution_60 <- (data_users$contribution_norm[data_users$endowment==60 & data_users$minor==0])
describe(contribution_60)
### Contributions by endowment
stats_contribution <- aggregate((data_users$contribution_norm),
by = list(endowment = data_users$endowment, unequal=data_users$unequal),
FUN = function(x) c(mean = mean(x), sd = sd(x),n = length(x)))
stats_contribution <- do.call(data.frame, stats_contribution)
stats_contribution$se <- stats_contribution$x.sd / sqrt(stats_contribution$x.n)
colnames(stats_contribution) <- c("endowment", "unequal", "mean", "sd", "n", "se")
stats_contribution$names <- c(paste(stats_contribution$endowment))
### Sort contributions
stats_contribution <- rbind(stats_contribution[2,], stats_contribution[3,],stats_contribution[4,],stats_contribution[1,],stats_contribution[5,],stats_contribution[6,])
### Plot contributions
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
pdf("img/contributions_norm.pdf")
barx <- barplot(stats_contribution$mean, names.arg=stats_contribution$names,ylim=c(0,1.1), col=c(color1, color1,color1,color2,color1,color1), border=NA, axis.lty=1, xlab="Endowment", ylab="Contribution")
error.bar(barx,stats_contribution$mean, 1.96*stats_contribution$sd/10)
points(barx, c(1,1,1,1,0.8,0.66), col=c(color1, color1,color1,color2,color1,color1), bg=c(color1, color1,color1,color2,color1,color1), pch = 21, cex=1.5)
abline(h = 0.5, col="black", lwd=1, lty=2)
legend("topright", legend = c("Unequal Treatment", "Equal Treatment"), fill = c(color1, color2))
dev.off()
source('~/Documents/OpenSystems/ClimateChange/Repository/Contributions/contribution_by_endowment.R', echo=TRUE)
stats_contribution
library(psych)
# colors bold
color1 = '#00008BDD'
color2 = '#8B8B00DD'
# colors transparent
color3 = '#00008B66'
color4 = '#8B8B0066'
cat("\014")
#########################
### Average Contribution
#########################
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
### Contributions per endowment
data_users$contribution <- (data_users$contribution)/10
contribution_20 <- (data_users$contribution[data_users$endowment==20])
describe(contribution_20)
contribution_30 <- (data_users$contribution[data_users$endowment==30])
describe(contribution_30)
contribution_40_equal <- (data_users$contribution[data_users$endowment==40 & data_users$unequal==0])
describe(contribution_40_equal)
contribution_40_unequal <- (data_users$contribution[data_users$endowment==40 & data_users$unequal==1])
describe(contribution_40_unequal)
contribution_50 <- (data_users$contribution[data_users$endowment==50 & data_users$minor==0])
describe(contribution_50)
contribution_60 <- (data_users$contribution[data_users$endowment==60 & data_users$minor==0])
describe(contribution_60)
### Contributions by endowment, treatment and minors
stats_contribution <- aggregate((data_users$contribution),
by = list(endowment = data_users$endowment, unequal=data_users$unequal),
FUN = function(x) c(mean = mean(x), sd = sd(x),n = length(x)))
stats_contribution <- do.call(data.frame, stats_contribution)
stats_contribution$se <- stats_contribution$x.sd / sqrt(stats_contribution$x.n)
colnames(stats_contribution) <- c("endowment", "unequal", "mean", "sd", "n", "se")
stats_contribution$names <- c(paste(stats_contribution$endowment))
### Sort contributions
stats_contribution <- rbind(stats_contribution[2,], stats_contribution[3,],stats_contribution[4,],stats_contribution[1,],stats_contribution[5,],stats_contribution[6,])
### Plot contributions
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
pdf("img/contributions.pdf")
barx <- barplot(stats_contribution$mean, names.arg=stats_contribution$names,ylim=c(0,4), col=c(color1, color1,color1,color2,color1,color1),border=NA, axis.lty=1, xlab="Endowment", ylab="Contribution")
error.bar(barx,stats_contribution$mean, 1.96*stats_contribution$sd/10)
legend("topleft", legend = c("Unequal Treatment", "Equal Treatment"), fill = c(color1, color2), bty = "n")
dev.off()
stats_contribution
source('~/Documents/OpenSystems/ClimateChange/Repository/Contributions/payoff_by_endowment.R', echo=TRUE)
library(psych)
# colors bold
color1 = '#00008BDD'
color2 = '#8B8B00DD'
# colors transparent
color3 = '#00008B66'
color4 = '#8B8B0066'
cat("\014")
#########################
### Average payoff
#########################
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
### payoffs per endowment
data_users$payoff <- (data_users$payoff)/10
payoff_20 <- (data_users$payoff[data_users$endowment==20])
describe(payoff_20)
payoff_30 <- (data_users$payoff[data_users$endowment==30])
describe(payoff_30)
payoff_40_equal <- (data_users$payoff[data_users$endowment==40 & data_users$unequal==0])
describe(payoff_40_equal)
payoff_40_unequal <- (data_users$payoff[data_users$endowment==40 & data_users$unequal==1])
describe(payoff_40_unequal)
payoff_50 <- (data_users$payoff[data_users$endowment==50 & data_users$minor==0])
describe(payoff_50)
payoff_60 <- (data_users$payoff[data_users$endowment==60 & data_users$minor==0])
describe(payoff_60)
### payoffs by endowment, treatment and minors
stats_payoff <- aggregate((data_users$payoff),
by = list(endowment = data_users$endowment, unequal=data_users$unequal),
FUN = function(x) c(mean = mean(x), sd = sd(x),n = length(x)))
stats_payoff <- do.call(data.frame, stats_payoff)
stats_payoff$se <- stats_payoff$x.sd / sqrt(stats_payoff$x.n)
colnames(stats_payoff) <- c("endowment", "unequal", "mean", "sd", "n", "se")
stats_payoff$names <- c(paste(stats_payoff$endowment))
### Sort payoffs
stats_payoff <- rbind(stats_payoff[2,], stats_payoff[3,],stats_payoff[4,],stats_payoff[1,],stats_payoff[5,],stats_payoff[6,])
### Plot payoffs
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
pdf("img/payoffs.pdf")
barx <- barplot(stats_payoff$mean, names.arg=stats_payoff$names,ylim=c(0,4), col=c(color1, color1,color1,color2,color1,color1),border=NA, axis.lty=1, xlab="Endowment", ylab="payoff")
error.bar(barx,stats_payoff$mean, 1.96*stats_payoff$sd/10)
legend("topleft", legend = c("Unequal Treatment", "Equal Treatment"), fill = c(color1, color2), bty = "n")
dev.off()
# t-test between payoffs with different endowments
# t.test(payoff_XX, payoff_YY)
stats_payoff
cat("\014")
##############################
### Average payoff Norm
##############################
data_users <- read.table("../data/users.csv", header=TRUE, sep=",")
### payoffs per endowment and ages subgroup
data_users$payoff_norm <- (data_users$payoff_norm)
payoff_20 <- (data_users$payoff_norm[data_users$endowment==20])
describe(payoff_20)
payoff_30 <- (data_users$payoff_norm[data_users$endowment==30])
describe(payoff_30)
payoff_40_equal <- (data_users$payoff_norm[data_users$endowment==40 & data_users$unequal==0])
describe(payoff_40_equal)
payoff_40_unequal <- (data_users$payoff_norm[data_users$endowment==40 & data_users$unequal==1])
describe(payoff_40_unequal)
payoff_50 <- (data_users$payoff_norm[data_users$endowment==50 & data_users$minor==0])
describe(payoff_50)
payoff_60 <- (data_users$payoff_norm[data_users$endowment==60 & data_users$minor==0])
describe(payoff_60)
### payoffs by endowment
stats_payoff <- aggregate((data_users$payoff_norm),
by = list(endowment = data_users$endowment, unequal=data_users$unequal),
FUN = function(x) c(mean = mean(x), sd = sd(x),n = length(x)))
stats_payoff <- do.call(data.frame, stats_payoff)
stats_payoff$se <- stats_payoff$x.sd / sqrt(stats_payoff$x.n)
colnames(stats_payoff) <- c("endowment", "unequal", "mean", "sd", "n", "se")
stats_payoff$names <- c(paste(stats_payoff$endowment))
### Sort payoffs
stats_payoff <- rbind(stats_payoff[2,], stats_payoff[3,],stats_payoff[4,],stats_payoff[1,],stats_payoff[5,],stats_payoff[6,])
### Plot payoffs
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
pdf("img/payoffs_norm.pdf")
barx <- barplot(stats_payoff$mean, names.arg=stats_payoff$names,ylim=c(0,1.1), col=c(color1, color1,color1,color2,color1,color1), border=NA, axis.lty=1, xlab="Endowment", ylab="payoff")
error.bar(barx,stats_payoff$mean, 1.96*stats_payoff$sd/10)
points(barx, c(1,1,1,1,0.8,0.66), col=c(color1, color1,color1,color2,color1,color1), bg=c(color1, color1,color1,color2,color1,color1), pch = 21, cex=1.5)
abline(h = 0.5, col="black", lwd=1, lty=2)
legend("topright", legend = c("Unequal Treatment", "Equal Treatment"), fill = c(color1, color2), bty = "n")
dev.off()
stats_payoff
users = read.csv("../data/users.csv", row.names = 1)
users
data$contribution <- data$contribution/10
data$contribution/10
data$contribution
users$contribution <- users$contribution/10
users
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data
data_equal <- data(data$unequal==0)
data_equal <- data[data$unequal==0]
data$unequal==0
data_equal[data_equal[, "unequal"] == 0,]
data_equal[data$unequal==0,]
data_equal[data$unequal==0]
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data[data$unequal==0]
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data$unequal==0
data[data$unequal==0]
data[data[,1] == 0,]
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
length(data_equal)
data_equal
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
data_equal
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="results"
maxK = 9 # maximum number of clusters
reps = 1000 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="/img"
maxK = 9 # maximum number of clusters
reps = 1000 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title=""
maxK = 9 # maximum number of clusters
reps = 1000 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="results/results"
maxK = 9 # maximum number of clusters
reps = 1000 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="results/results"
maxK = 3 # maximum number of clusters
reps = 10 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="../data/results"
maxK = 3 # maximum number of clusters
reps = 10 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="results"
maxK = 3 # maximum number of clusters
reps = 10 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="/log/results"
maxK = 3 # maximum number of clusters
reps = 10 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
# https://www.bioconductor.org/packages/devel/bioc/vignettes/ConsensusClusterPlus/inst/doc/ConsensusClusterPlus.pdf
library(lattice)
library(psych)
library(ConsensusClusterPlus)
################################
### Data users and contributions
################################
users = read.csv("../data/users.csv", row.names = 1)
### Contribution per round
users$contribution <- users$contribution/10
### w/ 120
data = read.csv("../data/contributions.csv", row.names = 1)  # read csv file
data_equal <- data[data[,1] == 0,]
data_equal <- data_equal[,c("X0","X24","X48","X72","X96","X.120")]
### data transpose
datat = t(data_equal)
title="log/results"
maxK = 3 # maximum number of clusters
reps = 10 # number of clusters calculate
### Hierarchical clustering / Euclidean distances / Ward.D2 linkage
results = ConsensusClusterPlus(datat, maxK=maxK, reps=reps, pItem=0.8, pFeature=1, title=title, clusterAlg="hc", distance="euclidean", innerLinkage="ward.D2", finalLinkage="ward.D2", seed=123456789.01234, plot="eps")
### Item-Consensus (ICL)
icl = calcICL(results,title=title,plot="eps")
source('~/Documents/OpenSystems/ClimateChange/Repository/Cluster/consensus_clustering_equal.R', echo=TRUE)
source('~/Documents/OpenSystems/ClimateChange/Repository/Cluster/consensus_clustering_equal.R', echo=TRUE)
source('~/Documents/OpenSystems/ClimateChange/Repository/Cluster/consensus_clustering_equal.R', echo=TRUE)
source('~/Documents/OpenSystems/ClimateChange/Repository/Cluster/consensus_clustering_equal.R', echo=TRUE)
source('~/Documents/OpenSystems/ClimateChange/Repository/Cluster/consensus_clustering_equal.R', echo=TRUE)
